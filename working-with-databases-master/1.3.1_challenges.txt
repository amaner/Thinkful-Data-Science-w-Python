# challenges in lesson 1.3.1 "Getting Familiar with SQLite"
# Andrew Maner
# queries verified to work in sqlite3

# Create another table called 'weather' with the columns city, year,
# warm_month, cold_month, and average_high with data types text,
# integer, text, text and integer.
CREATE TABLE weather (city text, year integer, warm_month text, cold_month text, average_high integer);

# Add the indicated data to the table
INSERT INTO weather (city, year, warm_month, cold_month, average_high) VALUES
	('New York City',2013,'July','January',62),
	('Boston',2013,'July','January',59),
	('Chicago',2013,'July','January',59),
	('Miami',2013,'August','January',84),
	('Dallas',2013,'July','January',77),
	('Seattle',2013,'July','January',61),
	('Portland',2013,'July','December',63),
	('San Francisco',2013,'September','December',64),
	('Los Angeles',2013,'September','December',75);

# How many rows are in the weather table? 9
SELECT COUNT(*) FROM weather;

# What cities were hottest in July in 2013?
# NYC, Boston, Chicago, Dallas, Seattle, Portland
SELECT city FROM weather WHERE warm_month='July';

# What cities were hottest in July and not coldest in January?
# Portland
SELECT city FROM weather WHERE warm_month='July' AND NOT cold_month='January';

# Use an UPDATE statement to undo the meddling from above,
# changing "Californ-I-A" back to "CA".
UPDATE cities SET state='CA' WHERE state='Californ-I-A';

# Delete the remaining tables from cities.
DELETE FROM cities WHERE state LIKE '%';

#Re-add the original data using the INSERT INTO command from above
INSERT INTO cities (name, state) VALUES
	('New York City','NY'),
	('Boston','MA'),
	('Chicago','IL'),
	('Miami','FL'),
	('Dallas','TX'),
	('Seattle','WA'),
	('Portland','OR'),
	('San Francisco','CA'),
	('Los Angeles','CA');

